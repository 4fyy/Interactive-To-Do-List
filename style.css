* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    --black1: #212121;
    --black2: #2C2C2C;
    --black3: #4E4E4E;
    --black4: #444444;
    --blue1: #000957;
    --blue2: #2E3A9E;
    --blue3: #344CB7;
}

body {
    font-family: "Poppins", serif;
    background-color: var(--black1);
    color: lightgray;
    display: grid;
    justify-content: center;
}

h1 {
    text-align: center;
    color: var(--blue3);
    margin: 40px 0;
}

.container {
    background-color: var(--black2);
    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
    width: max-content;
    padding: 40px;
    border-radius: 8px;
}

.container .add {
    display: flex;
    gap: 16px;
    align-items: end;
}

.container .add .add-title,
.container .add .add-description {
    display: grid;
    gap: 6px;
}

.container input {
    width: 14vw;
    height: 4vh;
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 5px 10px;
    font-size: 0.875rem;
    box-sizing: border-box;
    outline: none;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.container input:focus {
    border-color: var(--blue3);
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
}

.container input:hover {
    border-color: #888;
}

.container .add button {
    width: 3vw;
    height: 4vh;
    background-color: var(--blue3);
    padding: 5px 10px;
    border: 1px solid var(--blue3);
    border-radius: 5px;
    color: lightgray;
    transition: .3s;
}

.container .add button:hover {
    background-color: var(--blue2);
    border: 1px solid var(--blue2);
    cursor: pointer;
}

@media all and (max-width: 768px) {
    .container .add {
        display: block;
    }

    .container input {
        width: 60vw;
        height: 4vh;
        margin-bottom: 16px;
    }

    .container .add button {
        width: 10vw;
        height: 3vh;
    }
}

hr {
    background-color: var(--black3);
    border: 1px solid var(--black3);
    height: 1px;
    border-radius: 5px;
    margin: 20px 0;
}

.tasks {
    display: grid;
    gap: 10px;
}

.task {
    width: 100%;
    padding: 10px 20px;
    background-color: var(--black3);
    border-radius: 8px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
}

.task .content {
    display: flex;
    gap: 16px;
    align-items: center;
}

.task h3 {
    color: var(--blue3);
}

.task .description {
    font-size: 0.75rem;
}

.task .icons {
    display: inline-flex;
    gap: 8px;
}

.task .icons i {
    font-size: 1.25rem;
    transition: .3s;
}

.task .icons i:hover {
    color: #d63031;
    cursor: pointer;
}

/*check box design from "https://getcssscan.com/css-checkboxes-examples"*/
@supports (-webkit-appearance: none) or (-moz-appearance: none) {
    .checkbox-wrapper-13 input[type=checkbox] {
        --active: #275EFE;
        --active-inner: #fff;
        --focus: 2px rgba(39, 94, 254, .3);
        --border: #BBC1E1;
        --border-hover: #275EFE;
        --background: #fff;
        --disabled: #F6F8FF;
        --disabled-inner: #E1E6F9;
        -webkit-appearance: none;
        -moz-appearance: none;
        height: 21px;
        outline: none;
        display: inline-block;
        vertical-align: top;
        position: relative;
        margin: 0;
        cursor: pointer;
        border: 1px solid var(--bc, var(--border));
        background: var(--b, var(--background));
        transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
    }

    .checkbox-wrapper-13 input[type=checkbox]:after {
        content: "";
        display: block;
        left: 0;
        top: 0;
        position: absolute;
        transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
    }

    .checkbox-wrapper-13 input[type=checkbox]:checked {
        --b: var(--active);
        --bc: var(--active);
        --d-o: .3s;
        --d-t: .6s;
        --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
    }

    .checkbox-wrapper-13 input[type=checkbox]:disabled {
        --b: var(--disabled);
        cursor: not-allowed;
        opacity: 0.9;
    }

    .checkbox-wrapper-13 input[type=checkbox]:disabled:checked {
        --b: var(--disabled-inner);
        --bc: var(--border);
    }

    .checkbox-wrapper-13 input[type=checkbox]:disabled+label {
        cursor: not-allowed;
    }

    .checkbox-wrapper-13 input[type=checkbox]:hover:not(:checked):not(:disabled) {
        --bc: var(--border-hover);
    }

    .checkbox-wrapper-13 input[type=checkbox]:focus {
        box-shadow: 0 0 0 var(--focus);
    }

    .checkbox-wrapper-13 input[type=checkbox]:not(.switch) {
        width: 21px;
    }

    .checkbox-wrapper-13 input[type=checkbox]:not(.switch):after {
        opacity: var(--o, 0);
    }

    .checkbox-wrapper-13 input[type=checkbox]:not(.switch):checked {
        --o: 1;
    }

    .checkbox-wrapper-13 input[type=checkbox]+label {
        display: inline-block;
        vertical-align: middle;
        cursor: pointer;
        margin-left: 4px;
    }

    .checkbox-wrapper-13 input[type=checkbox]:not(.switch) {
        border-radius: 7px;
    }

    .checkbox-wrapper-13 input[type=checkbox]:not(.switch):after {
        width: 5px;
        height: 9px;
        border: 2px solid var(--active-inner);
        border-top: 0;
        border-left: 0;
        left: 7px;
        top: 4px;
        transform: rotate(var(--r, 20deg));
    }

    .checkbox-wrapper-13 input[type=checkbox]:not(.switch):checked {
        --r: 43deg;
    }
}

.checkbox-wrapper-13 * {
    box-sizing: inherit;
}

.checkbox-wrapper-13 *:before,
.checkbox-wrapper-13 *:after {
    box-sizing: inherit;
}